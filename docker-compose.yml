version: "3"

networks:
  web:

services:
  nginx:
    image: nginx:stable-alpine
    container_name: api_nginx
    ports:
      - "${HOST_NGINX_PORT:-80}:80"
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - mysql
      - redis
    networks:
      - web

  php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: api_php
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    ports:
      - "${HOST_PHP_PORT:-9000}:9000"
    environment:
      - COMPOSER_MEMORY_LIMIT=-1
    networks:
      - web
    depends_on:
      - mysql
      - redis

  mysql:
    image: mysql:8
    container_name: api_mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    ports:
      - "${HOST_MYSQL_PORT:-3306}:3306"
    volumes:
      - ./docker/mysql:/var/lib/mysql
    environment:
      MYSQL_DATABASE: "${DB_DATABASE}"
      MYSQL_USER: "${DB_USERNAME}"
      MYSQL_PASSWORD: "${DB_PASSWORD:-baseplate}"
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD:-baseplate}"
      SERVICE_NAME: mysql
    networks:
      - web

  redis:
    image: redis:alpine
    container_name: api_redis
    restart: unless-stopped
    tty: true
    ports:
      - "${HOST_REDIS_PORT:-6379}:6379"
    volumes:
      - ./docker/redis:/var/lib/redis
    networks:
      - web
